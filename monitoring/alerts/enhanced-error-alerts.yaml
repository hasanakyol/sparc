groups:
  - name: error_monitoring_enhanced
    interval: 30s
    rules:
      # Critical error alerts
      - alert: CriticalErrorRate
        expr: |
          (sum(rate(http_requests_total{status=~"5.."}[5m])) by (service) 
          / sum(rate(http_requests_total[5m])) by (service)) > 0.10
        for: 2m
        labels:
          severity: critical
          team: platform
          page: true
        annotations:
          summary: "Critical error rate in {{ $labels.service }}"
          description: "Service {{ $labels.service }} has {{ $value | humanizePercentage }} error rate (threshold: 10%)"
          runbook_url: "https://wiki.sparc.com/runbooks/critical-error-rate"
          dashboard_url: "https://grafana.sparc.com/d/sparc-error-monitoring-comprehensive?var-service={{ $labels.service }}"

      # Error budget alerts
      - alert: ErrorBudgetBurnRateCritical
        expr: |
          (1 - (sum(rate(http_requests_total{status!~"5.."}[1h])) by (service)
          / sum(rate(http_requests_total[1h])) by (service))) 
          / (1 - 0.99) > 14.4
        for: 5m
        labels:
          severity: critical
          team: sre
          page: true
        annotations:
          summary: "Critical error budget burn rate for {{ $labels.service }}"
          description: "Service {{ $labels.service }} is burning error budget 14.4x faster than sustainable rate"
          runbook_url: "https://wiki.sparc.com/runbooks/error-budget-burn"

      - alert: ErrorBudgetExhausted
        expr: |
          ((1 - (sum(increase(http_requests_total{status!~"5.."}[30d])) by (service)
          / sum(increase(http_requests_total[30d])) by (service))) 
          / (1 - 0.99)) > 1
        for: 15m
        labels:
          severity: critical
          team: sre
          page: true
        annotations:
          summary: "Error budget exhausted for {{ $labels.service }}"
          description: "Service {{ $labels.service }} has consumed {{ $value | humanizePercentage }} of monthly error budget"
          runbook_url: "https://wiki.sparc.com/runbooks/error-budget-exhausted"

      # Cascading failure detection
      - alert: CascadingFailureDetected
        expr: |
          (count(circuit_breaker_state{state="open"} == 1) > 3)
          and
          (count((sum(rate(http_requests_total{status=~"5.."}[5m])) by (service) 
          / sum(rate(http_requests_total[5m])) by (service)) > 0.1) > 2)
        for: 1m
        labels:
          severity: critical
          team: platform
          page: true
          incident_type: cascading_failure
        annotations:
          summary: "Cascading failure detected across multiple services"
          description: "{{ $value }} services are experiencing failures with multiple circuit breakers open"
          runbook_url: "https://wiki.sparc.com/runbooks/cascading-failure"
          action: "Immediate intervention required - check service dependencies and consider emergency rollback"

      # Service dependency alerts
      - alert: DependencyErrorRateHigh
        expr: |
          (sum(rate(grpc_client_handled_total{grpc_code!="OK"}[5m])) by (grpc_service, grpc_method)
          / sum(rate(grpc_client_handled_total[5m])) by (grpc_service, grpc_method)) > 0.05
        for: 5m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High dependency error rate: {{ $labels.grpc_service }}.{{ $labels.grpc_method }}"
          description: "gRPC method {{ $labels.grpc_service }}.{{ $labels.grpc_method }} has {{ $value | humanizePercentage }} error rate"
          runbook_url: "https://wiki.sparc.com/runbooks/dependency-errors"

      # Application-specific error alerts
      - alert: DatabaseConnectionPoolExhausted
        expr: |
          (database_connection_pool_size - database_connection_pool_active) 
          / database_connection_pool_size < 0.1
        for: 5m
        labels:
          severity: critical
          team: database
        annotations:
          summary: "Database connection pool nearly exhausted in {{ $labels.service }}"
          description: "Service {{ $labels.service }} has only {{ $value | humanizePercentage }} of connection pool available"
          runbook_url: "https://wiki.sparc.com/runbooks/db-connection-pool"

      - alert: UnhandledExceptionSpike
        expr: |
          (rate(unhandled_exceptions_total[5m]) 
          / rate(unhandled_exceptions_total[1h])) > 5
        for: 2m
        labels:
          severity: warning
          team: development
        annotations:
          summary: "Spike in unhandled exceptions in {{ $labels.service }}"
          description: "Service {{ $labels.service }} is experiencing 5x more unhandled exceptions than normal"
          runbook_url: "https://wiki.sparc.com/runbooks/unhandled-exceptions"

      # Authentication and security alerts
      - alert: AuthenticationFailureSpike
        expr: |
          rate(authentication_failures_total[5m]) > 10
        for: 2m
        labels:
          severity: critical
          team: security
          security_incident: true
        annotations:
          summary: "High rate of authentication failures"
          description: "Authentication failures occurring at {{ $value | humanize }} per second - possible security incident"
          runbook_url: "https://wiki.sparc.com/runbooks/auth-failure-spike"
          action: "Check for brute force attacks or credential stuffing attempts"

      # Error correlation alerts
      - alert: CorrelatedErrors
        expr: |
          count(
            (sum(rate(http_requests_total{status=~"5.."}[5m])) by (service) 
            / sum(rate(http_requests_total[5m])) by (service)) > 0.05
          ) > 5
        for: 3m
        labels:
          severity: critical
          team: platform
          page: true
        annotations:
          summary: "Correlated errors across {{ $value }} services"
          description: "{{ $value }} services are simultaneously experiencing >5% error rates"
          runbook_url: "https://wiki.sparc.com/runbooks/correlated-errors"
          action: "Check for infrastructure issues, shared dependencies, or deployment problems"

      # Video processing specific alerts
      - alert: VideoProcessingErrors
        expr: |
          rate(video_processing_errors_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          team: video
        annotations:
          summary: "High video processing error rate"
          description: "Video processing errors occurring at {{ $value | humanize }} per second"
          runbook_url: "https://wiki.sparc.com/runbooks/video-processing-errors"

      # Retry exhaustion alerts
      - alert: RetryExhaustion
        expr: |
          (sum(rate(retry_attempts_total{attempt="max"}[5m])) by (service)
          / sum(rate(retry_attempts_total[5m])) by (service)) > 0.1
        for: 10m
        labels:
          severity: warning
          team: platform
        annotations:
          summary: "High retry exhaustion rate in {{ $labels.service }}"
          description: "{{ $value | humanizePercentage }} of retries are exhausting max attempts in {{ $labels.service }}"
          runbook_url: "https://wiki.sparc.com/runbooks/retry-exhaustion"

  - name: error_slo_monitoring
    interval: 1m
    rules:
      # Multi-window multi-burn-rate alerts
      - alert: ErrorBudgetBurnRate2Windows
        expr: |
          (
            (1 - (sum(rate(http_requests_total{status!~"5.."}[5m])) by (service)
            / sum(rate(http_requests_total[5m])) by (service))) 
            / (1 - 0.99) > 14.4
          )
          and
          (
            (1 - (sum(rate(http_requests_total{status!~"5.."}[1h])) by (service)
            / sum(rate(http_requests_total[1h])) by (service))) 
            / (1 - 0.99) > 14.4
          )
        for: 2m
        labels:
          severity: critical
          team: sre
          burn_rate: "14.4x"
        annotations:
          summary: "Fast error budget burn (14.4x) for {{ $labels.service }}"
          description: "Service {{ $labels.service }} is burning error budget 14.4x faster than sustainable"
          runbook_url: "https://wiki.sparc.com/runbooks/fast-burn"

      - alert: ErrorBudgetBurnRate6h
        expr: |
          (
            (1 - (sum(rate(http_requests_total{status!~"5.."}[30m])) by (service)
            / sum(rate(http_requests_total[30m])) by (service))) 
            / (1 - 0.99) > 6
          )
          and
          (
            (1 - (sum(rate(http_requests_total{status!~"5.."}[6h])) by (service)
            / sum(rate(http_requests_total[6h])) by (service))) 
            / (1 - 0.99) > 6
          )
        for: 15m
        labels:
          severity: warning
          team: sre
          burn_rate: "6x"
        annotations:
          summary: "Moderate error budget burn (6x) for {{ $labels.service }}"
          description: "Service {{ $labels.service }} is burning error budget 6x faster than sustainable"
          runbook_url: "https://wiki.sparc.com/runbooks/moderate-burn"

      - alert: ErrorBudgetBurnRate24h
        expr: |
          (
            (1 - (sum(rate(http_requests_total{status!~"5.."}[2h])) by (service)
            / sum(rate(http_requests_total[2h])) by (service))) 
            / (1 - 0.99) > 3
          )
          and
          (
            (1 - (sum(rate(http_requests_total{status!~"5.."}[24h])) by (service)
            / sum(rate(http_requests_total[24h])) by (service))) 
            / (1 - 0.99) > 3
          )
        for: 30m
        labels:
          severity: warning
          team: sre
          burn_rate: "3x"
        annotations:
          summary: "Slow error budget burn (3x) for {{ $labels.service }}"
          description: "Service {{ $labels.service }} is burning error budget 3x faster than sustainable"
          runbook_url: "https://wiki.sparc.com/runbooks/slow-burn"

  - name: error_infrastructure
    interval: 30s
    rules:
      # Infrastructure error patterns
      - alert: RedisClusterErrors
        expr: |
          sum(rate(redis_cluster_errors_total[5m])) by (cluster) > 0.5
        for: 5m
        labels:
          severity: critical
          team: infrastructure
        annotations:
          summary: "Redis cluster {{ $labels.cluster }} experiencing errors"
          description: "Redis cluster {{ $labels.cluster }} has {{ $value | humanize }} errors per second"
          runbook_url: "https://wiki.sparc.com/runbooks/redis-cluster-errors"

      - alert: KafkaProducerErrors
        expr: |
          rate(kafka_producer_errors_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          team: infrastructure
        annotations:
          summary: "Kafka producer errors in {{ $labels.service }}"
          description: "Service {{ $labels.service }} experiencing {{ $value | humanize }} Kafka producer errors per second"
          runbook_url: "https://wiki.sparc.com/runbooks/kafka-producer-errors"

      - alert: S3OperationErrors
        expr: |
          rate(s3_operation_errors_total[5m]) > 0.05
        for: 10m
        labels:
          severity: warning
          team: infrastructure
        annotations:
          summary: "S3 operation errors in {{ $labels.service }}"
          description: "Service {{ $labels.service }} experiencing {{ $value | humanize }} S3 errors per second for operation {{ $labels.operation }}"
          runbook_url: "https://wiki.sparc.com/runbooks/s3-errors"