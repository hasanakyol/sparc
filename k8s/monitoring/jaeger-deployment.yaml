apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: observability
  labels:
    app: jaeger
    component: collector
spec:
  ports:
    - name: grpc-otlp
      port: 4317
      protocol: TCP
      targetPort: 4317
    - name: http-otlp
      port: 4318
      protocol: TCP
      targetPort: 4318
    - name: grpc-jaeger
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: http-jaeger
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
  selector:
    app: jaeger
    component: collector
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: observability
  labels:
    app: jaeger
    component: query
spec:
  ports:
    - name: http
      port: 16686
      protocol: TCP
      targetPort: 16686
    - name: grpc
      port: 16685
      protocol: TCP
      targetPort: 16685
  selector:
    app: jaeger
    component: query
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: observability
  labels:
    app: jaeger
    component: agent
spec:
  ports:
    - name: compact
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: binary
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: configs
      port: 5778
      protocol: TCP
      targetPort: 5778
  selector:
    app: jaeger
    component: agent
  type: ClusterIP
  clusterIP: None  # Headless service for agent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: observability
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        component: all-in-one
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.53
        env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          value: "elasticsearch"
        - name: ES_SERVER_URLS
          value: "http://elasticsearch:9200"
        - name: ES_INDEX_PREFIX
          value: "sparc-traces"
        - name: ES_TAGS_AS_FIELDS_ALL
          value: "true"
        - name: ES_NUM_SHARDS
          value: "3"
        - name: ES_NUM_REPLICAS
          value: "1"
        - name: QUERY_BASE_PATH
          value: "/jaeger"
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: METRICS_STORAGE_TYPE
          value: "prometheus"
        - name: PROMETHEUS_SERVER_URL
          value: "http://prometheus:9090"
        ports:
        - containerPort: 4317  # OTLP gRPC
          name: grpc-otlp
          protocol: TCP
        - containerPort: 4318  # OTLP HTTP
          name: http-otlp
          protocol: TCP
        - containerPort: 14250  # Jaeger gRPC
          name: grpc-jaeger
          protocol: TCP
        - containerPort: 14268  # Jaeger HTTP
          name: http-jaeger
          protocol: TCP
        - containerPort: 9411   # Zipkin
          name: zipkin
          protocol: TCP
        - containerPort: 16686  # Query UI
          name: query
          protocol: TCP
        - containerPort: 16685  # Query gRPC
          name: query-grpc
          protocol: TCP
        - containerPort: 14269  # Admin
          name: admin
          protocol: TCP
        - containerPort: 6831   # Agent compact
          name: agent-compact
          protocol: UDP
        - containerPort: 6832   # Agent binary
          name: agent-binary
          protocol: UDP
        - containerPort: 5778   # Agent configs
          name: agent-configs
          protocol: TCP
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 15
          periodSeconds: 20
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-sampling
  namespace: observability
data:
  sampling.json: |
    {
      "service_strategies": [
        {
          "service": "api-gateway",
          "type": "adaptive",
          "max_traces_per_second": 100
        },
        {
          "service": "auth-service",
          "type": "probabilistic",
          "param": 0.1
        },
        {
          "service": "video-management-service",
          "type": "probabilistic",
          "param": 0.05
        },
        {
          "service": "analytics-service",
          "type": "adaptive",
          "max_traces_per_second": 50
        },
        {
          "service": "access-control-service",
          "type": "probabilistic",
          "param": 0.1
        }
      ],
      "default_strategy": {
        "type": "probabilistic",
        "param": 0.001,
        "operation_strategies": [
          {
            "operation": "GET /health",
            "type": "probabilistic",
            "param": 0.0001
          },
          {
            "operation": "GET /metrics",
            "type": "probabilistic",
            "param": 0.0001
          }
        ]
      }
    }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ingress
  namespace: observability
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - host: monitoring.sparc.local
    http:
      paths:
      - path: /jaeger(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686
---
# PersistentVolumeClaim for Jaeger badger storage (for development)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jaeger-badger-pvc
  namespace: observability
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Alternative deployment using badger storage for development
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-badger
  namespace: observability
  labels:
    app: jaeger
    variant: badger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      variant: badger
  template:
    metadata:
      labels:
        app: jaeger
        variant: badger
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.53
        env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          value: "badger"
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: BADGER_DIRECTORY_VALUE
          value: "/badger/data"
        - name: BADGER_DIRECTORY_KEY
          value: "/badger/key"
        volumeMounts:
        - name: badger-storage
          mountPath: /badger
        ports:
        - containerPort: 4317
          name: grpc-otlp
        - containerPort: 16686
          name: query
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: badger-storage
        persistentVolumeClaim:
          claimName: jaeger-badger-pvc