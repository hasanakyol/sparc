---
apiVersion: v1
kind: ConfigMap
metadata:
  name: visitor-management-service-config
  namespace: sparc
  labels:
    app: visitor-management-service
    component: config
data:
  NODE_ENV: "production"
  PORT: "3011"
  LOG_LEVEL: "info"
  REDIS_URL: "redis://redis-service:6379"
  DATABASE_URL: "postgresql://postgres:5432/sparc"
  VISITOR_BADGE_TEMPLATE: "default"
  VISITOR_PHOTO_STORAGE: "s3"
  EMAIL_NOTIFICATIONS_ENABLED: "true"
  SMS_NOTIFICATIONS_ENABLED: "true"
  BADGE_PRINTER_TIMEOUT: "30000"
  VISITOR_SESSION_TIMEOUT: "28800"
  OVERSTAY_ALERT_THRESHOLD: "3600"
  MAX_VISITORS_PER_HOST: "10"
  VISITOR_PHOTO_MAX_SIZE: "5242880"
  WATCHLIST_CHECK_ENABLED: "true"
  EVACUATION_TRACKING_ENABLED: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: visitor-management-service
  namespace: sparc
  labels:
    app: visitor-management-service
    component: backend
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: visitor-management-service
  template:
    metadata:
      labels:
        app: visitor-management-service
        component: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3011"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sparc-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: visitor-management-service
        image: sparc/visitor-management-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3011
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: LOG_LEVEL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: REDIS_URL
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: sparc-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: sparc-secrets
              key: jwt-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: sparc-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: sparc-secrets
              key: aws-secret-access-key
        - name: EMAIL_SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: sparc-secrets
              key: email-service-api-key
        - name: SMS_SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: sparc-secrets
              key: sms-service-api-key
        - name: VISITOR_BADGE_TEMPLATE
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: VISITOR_BADGE_TEMPLATE
        - name: VISITOR_PHOTO_STORAGE
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: VISITOR_PHOTO_STORAGE
        - name: EMAIL_NOTIFICATIONS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: EMAIL_NOTIFICATIONS_ENABLED
        - name: SMS_NOTIFICATIONS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: SMS_NOTIFICATIONS_ENABLED
        - name: BADGE_PRINTER_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: BADGE_PRINTER_TIMEOUT
        - name: VISITOR_SESSION_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: VISITOR_SESSION_TIMEOUT
        - name: OVERSTAY_ALERT_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: OVERSTAY_ALERT_THRESHOLD
        - name: MAX_VISITORS_PER_HOST
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: MAX_VISITORS_PER_HOST
        - name: VISITOR_PHOTO_MAX_SIZE
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: VISITOR_PHOTO_MAX_SIZE
        - name: WATCHLIST_CHECK_ENABLED
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: WATCHLIST_CHECK_ENABLED
        - name: EVACUATION_TRACKING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: visitor-management-service-config
              key: EVACUATION_TRACKING_ENABLED
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: visitor-management-service
  namespace: sparc
  labels:
    app: visitor-management-service
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3011"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3011
    targetPort: http
    protocol: TCP
  selector:
    app: visitor-management-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: visitor-management-service-hpa
  namespace: sparc
  labels:
    app: visitor-management-service
    component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: visitor-management-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: visitor-management-service-pdb
  namespace: sparc
  labels:
    app: visitor-management-service
    component: availability
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: visitor-management-service

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: visitor-management-service-netpol
  namespace: sparc
  labels:
    app: visitor-management-service
    component: security
spec:
  podSelector:
    matchLabels:
      app: visitor-management-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 3011
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 587
    - protocol: TCP
      port: 25
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: visitor-management-service-monitor
  namespace: sparc
  labels:
    app: visitor-management-service
    component: monitoring
spec:
  selector:
    matchLabels:
      app: visitor-management-service
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
    honorLabels: true

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: visitor-management-service-alerts
  namespace: sparc
  labels:
    app: visitor-management-service
    component: alerting
spec:
  groups:
  - name: visitor-management-service.rules
    rules:
    - alert: VisitorManagementServiceDown
      expr: up{job="visitor-management-service"} == 0
      for: 1m
      labels:
        severity: critical
        service: visitor-management-service
      annotations:
        summary: "Visitor Management Service is down"
        description: "Visitor Management Service has been down for more than 1 minute"
    
    - alert: VisitorManagementServiceHighErrorRate
      expr: rate(http_requests_total{job="visitor-management-service",status=~"5.."}[5m]) > 0.1
      for: 5m
      labels:
        severity: warning
        service: visitor-management-service
      annotations:
        summary: "High error rate in Visitor Management Service"
        description: "Visitor Management Service error rate is {{ $value }} errors per second"
    
    - alert: VisitorManagementServiceHighLatency
      expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="visitor-management-service"}[5m])) > 2
      for: 5m
      labels:
        severity: warning
        service: visitor-management-service
      annotations:
        summary: "High latency in Visitor Management Service"
        description: "95th percentile latency is {{ $value }}s"
    
    - alert: VisitorManagementServiceHighMemoryUsage
      expr: container_memory_usage_bytes{pod=~"visitor-management-service-.*"} / container_spec_memory_limit_bytes > 0.9
      for: 5m
      labels:
        severity: warning
        service: visitor-management-service
      annotations:
        summary: "High memory usage in Visitor Management Service"
        description: "Memory usage is {{ $value | humanizePercentage }}"
    
    - alert: VisitorManagementServiceHighCPUUsage
      expr: rate(container_cpu_usage_seconds_total{pod=~"visitor-management-service-.*"}[5m]) / container_spec_cpu_quota * 100 > 80
      for: 5m
      labels:
        severity: warning
        service: visitor-management-service
      annotations:
        summary: "High CPU usage in Visitor Management Service"
        description: "CPU usage is {{ $value }}%"
    
    - alert: VisitorBadgePrintingFailure
      expr: rate(visitor_badge_print_failures_total[5m]) > 0.1
      for: 2m
      labels:
        severity: warning
        service: visitor-management-service
      annotations:
        summary: "High visitor badge printing failure rate"
        description: "Badge printing failure rate is {{ $value }} failures per second"
    
    - alert: VisitorProcessingDelay
      expr: histogram_quantile(0.95, rate(visitor_processing_duration_seconds_bucket[5m])) > 30
      for: 5m
      labels:
        severity: warning
        service: visitor-management-service
      annotations:
        summary: "High visitor processing delay"
        description: "95th percentile visitor processing time is {{ $value }}s"
    
    - alert: VisitorOverstayAlerts
      expr: increase(visitor_overstay_alerts_total[1h]) > 10
      for: 0m
      labels:
        severity: info
        service: visitor-management-service
      annotations:
        summary: "High number of visitor overstay alerts"
        description: "{{ $value }} visitor overstay alerts in the last hour"
    
    - alert: WatchlistCheckFailure
      expr: rate(visitor_watchlist_check_failures_total[5m]) > 0.05
      for: 2m
      labels:
        severity: critical
        service: visitor-management-service
      annotations:
        summary: "Visitor watchlist check failures"
        description: "Watchlist check failure rate is {{ $value }} failures per second"