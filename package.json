{
  "name": "sparc",
  "version": "1.0.0",
  "description": "SPARC - Unified Access Control and Video Surveillance Platform",
  "private": true,
  "workspaces": [
    "packages/*",
    "services/*",
    "web"
  ],
  "scripts": {
    "build": "yarn workspaces foreach -A run build",
    "build:packages": "yarn workspaces foreach -i --include 'packages/*' run build",
    "build:services": "yarn workspaces foreach -i --include 'services/*' run build",
    "build:web": "yarn workspace web run build",
    "dev": "concurrently \"yarn dev:services\" \"yarn dev:web\"",
    "dev:services": "yarn workspaces foreach -i --include 'services/*' run dev",
    "dev:web": "yarn workspace web run dev",
    "test": "yarn workspaces foreach -A run test",
    "test:unit": "yarn workspaces foreach -A run test:unit",
    "test:integration": "yarn workspaces foreach -A run test:integration",
    "test:e2e": "yarn workspace web run test:e2e",
    "test:coverage": "jest --coverage --coverageDirectory=coverage",
    "test:coverage:html": "jest --coverage --coverageDirectory=coverage --coverageReporters=html",
    "test:coverage:report": "open coverage/lcov-report/index.html",
    "lint": "yarn workspaces foreach -A run lint",
    "lint:fix": "yarn workspaces foreach -A run lint:fix",
    "type-check": "yarn workspaces foreach -A run type-check",
    "type-check:strict": "tsc --noEmit --strict --project tsconfig.json && yarn workspaces foreach -A run type-check",
    "type-check:config": "tsc --noEmit --project tsconfig.json && tsc --noEmit --project web/tsconfig.json && yarn workspaces foreach -i --include 'services/*' exec tsc --noEmit",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "clean": "yarn workspaces foreach -A run clean && rimraf node_modules/.cache",
    "clean:deps": "yarn workspaces foreach -A exec rimraf node_modules && rimraf node_modules",
    "prepare": "husky install",
    "postinstall": "yarn build:packages",
    "start": "yarn workspaces foreach -i --include 'services/*' run start",
    "start:web": "yarn workspace web run start",
    "db:migrate": "yarn workspaces foreach -i --include 'services/*' run db:migrate",
    "db:generate": "yarn workspaces foreach -i --include 'services/*' run db:generate",
    "db:seed": "yarn workspaces foreach -i --include 'services/*' run db:seed",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "infra:deploy": "yarn workspace infra run deploy",
    "infra:diff": "yarn workspace infra run diff",
    "infra:destroy": "yarn workspace infra run destroy",
    "validate": "bash scripts/validate-unified.sh",
    "validate:health": "bash scripts/validate-unified.sh development health",
    "validate:implementation": "bash scripts/validate-unified.sh development implementation",
    "validate:security": "bash scripts/security-scan-unified.sh",
    "validate:performance": "bash scripts/validate-unified.sh development performance",
    "validate:readiness": "bash scripts/validate-unified.sh production readiness",
    "validate:all": "bash scripts/validate-unified.sh development all",
    "validate:report": "bash scripts/validate-unified.sh development all --report",
    "deploy:dev": "bash scripts/deploy-unified.sh development",
    "deploy:staging": "bash scripts/deploy-unified.sh staging",
    "deploy:production": "bash scripts/deploy-unified.sh production",
    "deploy:rollback": "bash scripts/deploy-unified.sh production --rollback",
    "device:test": "bash scripts/test-device-integration.sh",
    "device:discover": "bash scripts/test-device-integration.sh all discovery",
    "docs:generate": "ts-node scripts/generate-api-docs.ts",
    "docs:generate:full": "ts-node scripts/generate-api-docs.ts --start-services --postman",
    "docs:serve": "yarn workspace api-documentation-service run serve",
    "docs:build": "yarn workspace api-documentation-service run build",
    "docs:update-service": "ts-node scripts/update-service-openapi.ts",
    "test:requirements": "jest tests/validation/end-to-end-requirements.spec.ts --config tests/validation/jest.config.js",
    "test:performance": "node tests/performance/scalability-validation.js",
    "test:security": "jest tests/security/penetration-testing.spec.ts --config tests/security/jest.config.js",
    "test:compliance": "jest tests/compliance/regulatory-validation.spec.ts --config tests/compliance/jest.config.js",
    "test:offline": "jest tests/offline/mesh-networking.spec.ts --config tests/offline/jest.config.js"
  },
  "devDependencies": {
    "@jest/types": "^29.6.3",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.13.0",
    "@typescript-eslint/parser": "^6.13.0",
    "artillery": "^2.0.0",
    "chalk": "^5.3.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-security": "^1.7.1",
    "glob": "^10.3.10",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-html-reporter": "^3.10.2",
    "jest-junit": "^16.0.0",
    "js-yaml": "^4.1.0",
    "lint-staged": "^15.1.0",
    "node-fetch": "^3.3.2",
    "nyc": "^15.1.0",
    "ora": "^7.0.1",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.3.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "yarn": ">=3.0.0"
  },
  "packageManager": "yarn@4.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/sparc/sparc.git"
  },
  "author": "SPARC Team",
  "license": "UNLICENSED",
  "keywords": [
    "access-control",
    "video-surveillance",
    "security",
    "multi-tenant",
    "microservices",
    "physical-security"
  ],
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}